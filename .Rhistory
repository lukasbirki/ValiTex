library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "small", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "medium", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(prompter)
ui <- fluidPage(
includeCSS("styles.css"),
use_prompt(),
h4("This is a sentence with a question mark button:"),
p("Lorem ipsum dolor sit amet consectetur adipiscing elit. ",
"Sed tristique elit non ex vestibulum efficitur. ",
"Vestibulum a nunc nec leo luctus commodo. ",
"Donec vitae mauris enim. ",
"Aenean tempor ligula eget dolor luctus, ",
"eget consectetur felis consectetur.",
tags$span(
class = "question-button",
"?") |>
add_prompt(
message = "this is a plot, and I add some text to show the size of the box",
position = "left", type = "error",
size = "medium", rounded = TRUE
))
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyLink <- function(to, label) {
tags$a(
class = "shiny__link",
href = to,
label
)
}
runApp()
shiny::runGitHub(
repo = "shinyAppTutorials",
username = "davidruvolo51",
subdir = "shiny-links"
)
shiny::runGitHub(
repo = "shinyAppTutorials",
username = "davidruvolo51",
subdir = "shiny-links"
)
runApp()
runApp()
runApp()
runApp()
shinyLink <- function(to, label) {
tags$a(
class = "shiny__link",
href = to,
label
)
}
shinyLink <- function(to, label) {
tags$a(
class = "shiny__link",
href = to,
label
)
}
runApp()
code <- list(
js = paste0(readLines("shinyLink.js"), collapse = "\n")
)
View(code)
runApp()
ll
runApp()
runApp()
runApp()
shiny::runGitHub(
repo = "shinyAppTutorials",
username = "davidruvolo51",
subdir = "shiny-links"
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runGitHub(
repo = "shinyAppTutorials",
username = "davidruvolo51",
subdir = "shiny-links"
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ui <- fluidPage(theme = "flatly",
useShinyjs(),
use_prompt(),
includeCSS("styles.css"),
windowTitle = "ValiTex",  # Text displayed in the browser window title
navbarPage(title = "ValiTex",
theme = "navbar-default",
#Background ----
tabPanel("Home",
value = "home",
h2("ValiTex- A Validation Framework for Computational Text-based Measures of Social Science Constructs", align = "center"),
h4("Beta Version 0.9", align = "center"),
h3("About"),
p("This webpage accompanies the ", tags$a(href="https://github.com/lukasbirki/ValiTex-Checklist",target="_blank",
"ValiTex"),"framework by", tags$a(href="https://github.com/lukasbirki/ValiTex-Checklist",target="_blank",
"Birkenmaier et al. (2023)."),
"The framework is designed to help reserachers that aim to measure social science constructs using computational text analysis to validate thier measures."),
h3("Overview"),
p("Computational methods to analyse textual data require careful validation (Grimmer and Stewart, 2013; Grimmer et al., 2022). However, social science researchers
often lack common terminology and a unified framework that provides guidance to do so. We present a novel validation framework for text analysis (ValiTex) that guides scholars who aim to measure social science constructs based on textual data. Conceptuall, the framework concists of two components:"),
tags$ul(type = "A",
tags$li(tags$b("Conceptual Model:"),"General structure along distinct phases on how to approach validation"),
tags$li(tags$b("Dynamic Checklist:"),"A list of concrete validation steps for each phase"),),
p("For a detailed introduction into the theoretical background of the framework, please refer to the paper [Link to preprint] or click on the respective component below"),
tags$style(
HTML(".tabset { width: 80%; }")
),
div(style = "width: 95%; margin: auto;",tabsetPanel(
tabPanel(
title = "Conceptual Model",
value = "r",
h3("Conceptual Model"),
p("The conceptual model defines three major phases which researchers should follow when validating computational text-based measures. These Phases are"),
tags$ul(
tags$li(p(tags$code("Substantive Phase:"), "Demonstrate the theoretical underpinning of the measures")),
tags$li(p(tags$code("Structural Phase:"), "Evaluate the characteristics of the textual model and its output")),
tags$li(p(tags$code("External Phase:"), "Test how the measures relates to unrelated measures or information")),
),
div(
tags$img(src = "framework.png", id = "myimage", style = "margin-top: 40px;margin-bottom: 40px; cursor: pointer;"),
p(class = "caption", "Figure 1: Conceptual Model (click to expand)"))
),
tabPanel(
title = "Checklist",
value = "r",
h3("Checklist"),
p("The dynamic checklist within ValiTex defines and characterizes empirical validation steps, organized based on overarching validity dimensions. It provides a comprehensive list of validation steps with descriptions, evaluation instructions, and references to supplementary literature."),
div(tags$img(src = "checklist.png", id = "myimage", style = "margin-top: 40px;margin-bottom: 40px; cursor: pointer;"),
p(class = "caption", "Figure 2: Screenshot Checklist (click to expand)"))
,
))),
p(""),
),
#Checklist----
tabPanel("Checklist",
h3("User Instructions", add_prompt(
tags$span(
class = "question-button",
"?"),
position = "bottom", message = "For more information, see xx and y"
),),
p(HTML(paste("This application generates an adaptable checklist that you can use to validate your text-based measures.
Each row within the table corresponds to one validation step (i.e., a single reported and clearly demarcated validation activity). Validation steps can be either ",
span(style="color:#ed969e; font-weight: bold", "recommended "), "or ",
span(style="color:#96caed; font-weight: bold", "optional "),"depending on their relevance.", sep = ""),"As outlined in the corresponding paper, researchers should initially follow the order of the phases, starting with the substantive validation steps and ending with external validation steps while continuously considering robustness checks.
However, researchers might adapt this process to their individual use case."),
p("ValiTex accounts for differences in validation practices across text-based methods and research contexts. At present, ValiTex differentiates between four broad types of text-based methods:"),
tags$ul(tags$li(tags$b("Dictionary:"),"Rule-based methods that include words or phrases along with their respective meanings or sentiments (e.g., SentiWS)"),
tags$li(tags$b("Supervised:"),"Machine-learning methods that include some form of training data and test set and/or classification task (e.g., SVM, BERT)"),
tags$li(tags$b("Unsupervised (Topic Model):"),"Unsupervised methods that generate topis based on word-coocurrences (e.g., LDA) "),
tags$li(tags$b("Unsupervised (Text Scaling)"),"Unsupervised methods that produce scores that relate to some underlying scale based on word-coocurrences (e.g., Wordfish, Wordscores)"),
),
tags$p(tags$b("Please start by choosing a method from the drop-down menue below."), "The complete list of validation steps is also available on ",
tags$a(href="https://github.com/lukasbirki/ValiTex-Checklist/tree/main/data",target="_blank",
"Github.")),
# Sidebar layout with input and output definitions
verticalLayout(
# Sidebar panel for inputs
sidebarPanel(width = 12,
# Input: Choose dataset
selectInput("Method", "What text-based method do you want to validate? Please choose below:",
choices = c("--Please select a method--","Dictionary","Supervised", "Unsupervised: Topic Model", "Unsupervised: Text Scaling"),
selected = ""),
),
# Main panel for displaying outputs
mainPanel(width = 12,
tags$script('
$(document).on("click", "#myimage", function() {
if ($(this).hasClass("expanded")) {
$(this).removeClass("expanded");
$(this).css("max-width", "30%");
} else {
$(this).addClass("expanded");
$(this).css("max-width", "90%");
}
});
'),conditionalPanel(
tags$style(HTML('.group {background-color: #ccc !important;}')),
condition = "input.Method != '--Please select a method--'",  # Only show table when Method input is not empty
# downloadButton("downloadData", "Download (Excel)",
#                style = "float: right; margin-left: 10px;"),
downloadButton("Download_word", "Download (Word)",
style = "float: right; margin-left: 10px;"),
tags$h4(HTML(paste("Your selected text method is:",tags$b(tags$span(textOutput("value")), style = "display:inline-block;")), sep = "")),
DT::dataTableOutput("table"),  # Change from tableOutput to dataTableOutput
),
#Button
# Add image below description
)
)
),
),
#FaQ----
tabPanel("FAQ",
h3("Frequently asked questions"),
p("Here you will find answers to frequently asked questions about ValiTex If you have any questions that are not addressed here, please feel free to contact us!
For a detailed description of the ValiTex framework, please refer to the",tags$a(href="https://github.com/lukasbirki/ValiTex-Checklist",target="_blank",
"working paper.")),
faq::faq(data = df_daq, elementId = "faq", faqtitle = "")),
#Citation ----
tabPanel("Feedback",
id = "tab_feedback",
h3("Feedback"),
p("Please note this application is currently under construction and evolution.
Please feel free to reach out to us with any feedback you have. We are eager to hear from you and will take your suggestions into consideration as we continue to develop and enhance our website. To reach us, please refer to lukas.birkenmaier@gesis.org.
"),
h3("Citation"),
p("When refering to the site or the corresponding workin paper in publications, please cite the following references:"),
p("Birkenmaier, Lukas; Lechner, Clemens; Wagner, Claudia. (2023).",tags$em("ValiTex - a uniform validation framework for computational text-based measures of social science constructs."), "[Link to Arxiv DOI, tba. soon]"),
verbatimTextOutput("citationOutput"),
),
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
