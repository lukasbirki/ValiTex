library(readxl)
library(tidyverse)
library(DT)
library(shinythemes)

df <- readxl::read_excel("data/Framework.xlsx")

library(shiny)

ui <- fluidPage(theme = "flatly",
  # App title ----
  titlePanel("ValiTex Checklist"),
  # Subtitle and Remarks ----
  tags$p(
    "This checklist accompanies the ",
    tags$a(href="https://www.gofundme.com/f/fantasy-football-mental-health-initiative?utm_medium=copy_link&utm_source=customer&utm_campaign=p_lico+share-sheet", 
           "ValiTex framework for validating text-based measures of social science constructs"),
  "developed by Birkenmaier et al. (2023)"),
  tags$p("To generate a flexible checklist according to your researach context, please choose the group of text-based method you want to validate for your research. 
  The complete list of validation steps is also available at the correponding repository on ",
         
         tags$a(href="https://www.gofundme.com/f/fantasy-football-mental-health-initiative?utm_medium=copy_link&utm_source=customer&utm_campaign=p_lico+share-sheet", 
                "Github"),),
  
  
  # Sidebar layout with input and output definitions ----
  sidebarLayout(
    
    # Sidebar panel for inputs ----
    sidebarPanel(width = 2,
      
      # Input: Choose dataset ----
      selectInput("Method", "Choose your text-based method",
                  choices = c("Dictionary","Supervised", "Unsupervised: Topic Model", "Unsupervised: Text Scaling")),
      
      
      
    ),
    
    # Main panel for displaying outputs ----
    mainPanel(width = 10,
      
      DT::dataTableOutput("table"),  # Change from tableOutput to dataTableOutput
      #Button
      downloadButton("downloadData", "Download")
    )
  ),
  padding = 30,
  tags$style(type = "text/css", "
    body {
      padding-left: 50px;
      padding-right: 50px;
      padding-bottom: 100px;
    }
  ")
)

server <- function(input, output) {
  

  output$table <- renderDT({
    df %>%
      dplyr::select(Phase, Dimension, `Validation Step`, Type, input$Method) %>%
      dplyr::filter(!!sym(input$Method) != "n.a.") %>%
      datatable(
        options = list(
          #dom = 't',
          paging = FALSE,
          ordering = FALSE,
          searching = TRUE
        ),class = 'cell-border stripe'
      ) |> 
      formatStyle(
        input$Method,
        fontWeight = styleEqual(c("Mandatory", "Optional"),c("bold","italic")),
       # backgroundColor = styleEqual(c("Mandatory", "Optional"), c('darkolivegreen2', 'orange'))
      )
  })
  
  # Downloadable csv of selected dataset ----
  output$downloadData <- downloadHandler(
    filename = function() {
      paste(input$dataset, ".csv", sep = "")
    },
    content = function(file) {
      write.csv(datasetInput(), file, row.names = FALSE)
    }
  )
  
}


# Run the app
shinyApp(ui = ui, server = server)